Dataset: Digits
--------------------------------------------
Model Name: MVAE_Hard_Assignment_GMM_full_10_Digits
==================================================================
MVAE_Hard_Assignment_GMM_full_10_Digits Part:
==================================================================
Random Seed = 10
--------------------------------------------
Device = cuda:0
--------------------------------------------
Number of Epochs = 1500
--------------------------------------------
Learning Rate = 0.0001
--------------------------------------------
Step Size = 20
--------------------------------------------
Input Dimension = 64
--------------------------------------------
Encoder Hidden Dimension 1 = 256
--------------------------------------------
Encoder Hidden Dimension 2 = 256
--------------------------------------------
Latent Dimension = 10
--------------------------------------------
Decoder Hidden Layer 1 = 256
--------------------------------------------
Decoder Hidden Layer 2 = 256
--------------------------------------------
Output Dimension = 64
--------------------------------------------
Weight Decay = 1e-05
--------------------------------------------
Batch Size (Training) = 50
--------------------------------------------
Batch Size (Test) = 50
--------------------------------------------
gamma = 0.9
==================================================================

GMM Part:
==================================================================
Number of Components= 10
--------------------------------------------
Covariance Matrix= full
--------------------------------------------
Number of Iterations= 20
--------------------------------------------
Epsilon = 1e-20
--------------------------------------------
Precision = 28
==================================================================

Early Stopping:
--------------------------------------------
Maximum Patience = 1501
--------------------------------------------
Best Test Loss = inf
--------------------------------------------
Patience Counters = 0
==================================================================

Loss Functions:
==================================================================
Decoder Loss (Training) = tensor([[-19.4567, -21.4625, -27.1364, -30.7549, -39.4025, -46.1431, -47.5268,
         -29.0723, -50.7164, -27.4207],
        [-23.4274, -30.4406, -29.5431, -27.2805, -25.1441, -24.2265, -27.3056,
         -11.9223, -26.8756, -17.2987],
        [-27.7094, -22.7755, -27.4422, -21.4127, -38.6813, -24.7601, -20.2804,
         -25.3177, -34.0150, -25.8392],
        [-31.3954, -34.6511, -32.9552, -36.1494, -40.9951, -33.6585, -31.3380,
         -29.9183, -31.3116, -29.0884],
        [-41.0996, -22.3504, -30.9852, -28.7962, -30.5380, -33.9477, -25.0537,
         -26.3733, -29.1718, -28.2490],
        [-27.4612, -30.2313, -29.4989, -25.9866, -38.1395, -33.3799, -23.7627,
         -30.3262, -26.9971, -30.1215],
        [-34.2355, -28.8871, -36.4142, -34.7865, -31.5671, -44.1504, -32.8062,
         -56.2375, -19.3099, -35.8213],
        [-22.2182, -20.6512, -25.5653, -29.6224, -21.2893, -20.0217, -20.2097,
         -24.8742, -23.6414, -21.4126],
        [-34.3208, -30.8279, -43.3009, -35.6539, -31.1886, -37.6171, -28.9024,
         -28.8664, -24.6583, -38.8240],
        [-39.1786, -27.0368, -27.0527, -23.8394, -34.3923, -25.7297, -21.5806,
         -27.5242, -31.8491, -27.1273],
        [-32.5378, -35.2785, -28.1609, -23.3241, -38.8378, -30.4421, -26.0028,
         -31.5779, -30.8633, -26.8569],
        [-34.1948, -27.1845, -33.8488, -25.0713, -40.7642, -43.6934, -27.8894,
         -29.9601, -37.5902, -29.1838],
        [-32.9380, -29.3463, -26.4093, -27.7279, -36.0384, -33.9473, -26.3150,
         -26.1728, -27.5152, -28.2061],
        [-29.8807, -32.0669, -38.5951, -28.9585, -38.7801, -40.0454, -31.7060,
         -39.6587, -39.3703, -27.1884],
        [-27.4034, -28.0706, -28.7894, -44.1930, -16.9808, -22.4431, -35.4057,
         -27.8975, -28.7937, -29.8766],
        [-43.9790, -27.6050, -35.2013, -45.1207, -25.9694, -32.5952, -29.8332,
         -33.9417, -19.9591, -34.6609],
        [-28.8396, -27.5636, -45.8110, -37.8457, -22.8150, -28.4980, -36.3596,
         -36.1745, -31.1360, -35.1509],
        [-39.2258, -18.7526, -58.8890, -34.1108, -22.4576, -32.3939, -35.9338,
         -52.9673, -29.9322, -26.4774],
        [-30.8272, -32.0047, -56.7237, -36.5112, -42.2317, -46.4163, -39.1343,
         -44.8550, -49.4678, -22.6171],
        [-34.7588, -29.2376, -36.9478, -51.1634, -17.2312, -30.8200, -35.4940,
         -30.9444, -35.9531, -34.4085],
        [-19.5150, -34.3000, -29.5813, -27.8853, -35.6432, -15.5774, -15.6885,
         -28.3923, -40.0373, -17.6228],
        [-36.8660, -21.1719, -32.8334, -30.8382, -25.9105, -27.6976, -34.6811,
         -46.1741, -30.0558, -34.1321],
        [-34.4330, -28.5779, -38.4948, -42.2137, -27.4441, -33.2392, -31.8375,
         -41.5528, -22.5912, -31.2897],
        [-26.2535, -34.3047, -27.2070, -21.6626, -33.4214, -22.6234, -22.1977,
         -23.5057, -29.0150, -34.3130],
        [-32.5655, -32.3449, -46.9332, -26.8528, -37.3138, -33.6983, -31.5042,
         -40.3074, -33.5775, -31.6828],
        [-44.9194, -27.1542, -34.8313, -29.5299, -27.6499, -48.6569, -26.1991,
         -35.7157, -24.0979, -36.6643],
        [-17.6849, -40.5306, -32.4306, -18.8813, -44.7160, -37.2664, -33.0951,
         -33.1658, -45.2033, -28.7726]], device='cuda:0',
       grad_fn=<SumBackward1>)
=============================================================================================
Encoder Loss (Training) = Normal(loc: torch.Size([27, 10, 10]), scale: torch.Size([27, 10, 10]))
=============================================================================================
Decoder Loss (Test) = tensor([[-30.8125, -32.8423, -33.2081, -37.8297, -21.1627, -28.5726, -28.9284,
         -32.9079, -30.4224, -37.5144],
        [-38.5053, -38.7462, -48.7028, -49.0945, -25.7210, -38.1504, -36.7026,
         -39.8978, -35.4016, -47.8095],
        [-31.4789, -34.0341, -18.5411, -29.1349, -31.6715, -30.4216, -28.6830,
         -28.9912, -35.0268, -33.6869],
        [-28.1454, -41.6443, -39.5631, -28.8948, -47.5252, -34.9953, -34.9687,
         -29.3320, -45.6861, -20.4062],
        [-28.5627, -30.9059, -37.8531, -28.5356, -36.1376, -29.3036, -30.2060,
         -25.2258, -36.6577, -27.2946],
        [-28.3140, -37.8316, -41.9362, -30.3715, -48.4973, -31.4196, -33.4712,
         -27.8437, -43.0567, -18.1769],
        [-27.7601, -32.0207, -36.1597, -27.8867, -40.0666, -28.4417, -31.6413,
         -27.0059, -38.8264, -20.6750],
        [-24.7350, -24.7564, -28.1789, -27.3465, -27.3713, -22.5924, -23.5126,
         -26.7503, -31.6506, -31.8944],
        [-36.4919, -34.8960, -18.6311, -34.3185, -31.7731, -32.9759, -33.6666,
         -28.5828, -40.6605, -35.4293],
        [-24.9701, -31.1677, -29.1207, -23.0815, -38.8582, -25.0392, -21.4876,
         -28.9156, -32.6414, -30.4841],
        [-26.5822, -25.6621, -31.8278, -27.8929, -29.4185, -23.4178, -23.3262,
         -27.3585, -30.6820, -32.1054],
        [-32.1627, -31.1986, -37.2362, -41.7386, -20.1360, -29.7332, -29.7055,
         -34.8507, -28.8866, -40.0573],
        [-25.4798, -33.5934, -29.9078, -28.6921, -35.6087, -31.9968, -31.2388,
         -20.1588, -38.1124, -23.2825],
        [-24.7707, -33.4297, -27.1570, -26.3247, -33.1337, -28.6885, -28.3476,
         -20.7303, -37.0518, -25.1143],
        [-30.8706, -28.9916, -33.4948, -39.1446, -16.9192, -29.4891, -28.7822,
         -33.0967, -27.9984, -36.2638],
        [-24.5534, -26.3440, -27.3520, -24.0643, -32.4725, -22.1374, -19.6885,
         -26.4689, -30.7866, -32.9955],
        [-33.8012, -24.4840, -37.7679, -37.3977, -28.2178, -30.9527, -32.5629,
         -32.0548, -20.5303, -40.7893],
        [-23.8559, -27.3030, -31.1239, -27.8645, -28.1507, -25.8270, -26.0644,
         -20.1963, -31.1289, -23.6772],
        [-26.0430, -26.7594, -29.1738, -27.5339, -30.1768, -23.0955, -22.3322,
         -26.3722, -31.1057, -31.7532],
        [-31.2681, -31.2921, -40.6618, -31.3425, -38.6467, -29.9849, -30.6044,
         -28.3011, -37.0385, -30.5379]], device='cuda:0')
=============================================================================================
Encoder Loss (Test) = Normal(loc: torch.Size([20, 10, 10]), scale: torch.Size([20, 10, 10]))
=============================================================================================
